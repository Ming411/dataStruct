// 两两比较 交换元素位置
function bubbleSort(arr: number[]): number[] {
  const n = arr.length;
  let count = 0;
  for (let i = 0; i < n; i++) {
    // 只要前一轮没有进行交换就表示排序已经结束
    let swapped = false; // 优化项，当后续排序正确时无需再遍历
    // 内层循环找到最大值
    for (let j = 0; j < n - 1 - i; j++) {
      if (arr[j] > arr[j + 1]) {
        count += 1;
        const temp = arr[j];
        arr[j] = arr[j + 1];
        arr[j + 1] = temp;
        swapped = true;
        // console.log(JSON.stringify(arr), '----', i);
        // [18,65,88,45,27,9,15] ---- 0
        // [18,65,45,88,27,9,15] ---- 0
        // [18,65,45,27,88,9,15] ---- 0
        // [18,65,45,27,9,88,15] ---- 0
        // [18,65,45,27,9,15,88] ---- 0
        // [18,45,65,27,9,15,88] ---- 1
        // [18,45,27,65,9,15,88] ---- 1
        // [18,45,27,9,65,15,88] ---- 1
        // [18,45,27,9,15,65,88] ---- 1
        // [18,27,45,9,15,65,88] ---- 2
        // [18,27,9,45,15,65,88] ---- 2
        // [18,27,9,15,45,65,88] ---- 2
        // [18,9,27,15,45,65,88] ---- 3
        // [18,9,15,27,45,65,88] ---- 3
        // [9,18,15,27,45,65,88] ---- 4
        // [9,15,18,27,45,65,88] ---- 4
      }
    }
    if (!swapped) break;
  }
  return arr;
}
console.log(bubbleSort([18, 88, 65, 45, 27, 9, 15]));
